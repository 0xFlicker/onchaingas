/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface DataChunkCompilerInterface extends utils.Interface {
  functions: {
    "BEGIN_JSON()": FunctionFragment;
    "BEGIN_METADATA_VAR(string,bool)": FunctionFragment;
    "BEGIN_SCRIPT()": FunctionFragment;
    "BEGIN_SCRIPT_DATA()": FunctionFragment;
    "BEGIN_SCRIPT_DATA_COMPRESSED()": FunctionFragment;
    "END_JSON()": FunctionFragment;
    "END_METADATA_VAR(bool)": FunctionFragment;
    "END_SCRIPT()": FunctionFragment;
    "END_SCRIPT_DATA()": FunctionFragment;
    "END_SCRIPT_DATA_COMPRESSED()": FunctionFragment;
    "HTML_HEAD()": FunctionFragment;
    "SCRIPT_VAR(string,string,bool)": FunctionFragment;
    "base64Utils()": FunctionFragment;
    "compile2(address,address)": FunctionFragment;
    "compile3(address,address,address)": FunctionFragment;
    "compile4(address,address,address,address)": FunctionFragment;
    "compile5(address,address,address,address,address)": FunctionFragment;
    "compile6(address,address,address,address,address,address)": FunctionFragment;
    "compile7(address,address,address,address,address,address,address)": FunctionFragment;
    "compile8(address,address,address,address,address,address,address,address)": FunctionFragment;
    "compile9(address,address,address,address,address,address,address,address,address)": FunctionFragment;
    "fflate()": FunctionFragment;
    "owner()": FunctionFragment;
    "setFFlateAddress(address,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "BEGIN_JSON"
      | "BEGIN_METADATA_VAR"
      | "BEGIN_SCRIPT"
      | "BEGIN_SCRIPT_DATA"
      | "BEGIN_SCRIPT_DATA_COMPRESSED"
      | "END_JSON"
      | "END_METADATA_VAR"
      | "END_SCRIPT"
      | "END_SCRIPT_DATA"
      | "END_SCRIPT_DATA_COMPRESSED"
      | "HTML_HEAD"
      | "SCRIPT_VAR"
      | "base64Utils"
      | "compile2"
      | "compile3"
      | "compile4"
      | "compile5"
      | "compile6"
      | "compile7"
      | "compile8"
      | "compile9"
      | "fflate"
      | "owner"
      | "setFFlateAddress"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "BEGIN_JSON",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BEGIN_METADATA_VAR",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "BEGIN_SCRIPT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BEGIN_SCRIPT_DATA",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BEGIN_SCRIPT_DATA_COMPRESSED",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "END_JSON", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "END_METADATA_VAR",
    values: [PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "END_SCRIPT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "END_SCRIPT_DATA",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "END_SCRIPT_DATA_COMPRESSED",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "HTML_HEAD", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "SCRIPT_VAR",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<boolean>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "base64Utils",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "compile2",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "compile3",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "compile4",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "compile5",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "compile6",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "compile7",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "compile8",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "compile9",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(functionFragment: "fflate", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setFFlateAddress",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(functionFragment: "BEGIN_JSON", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "BEGIN_METADATA_VAR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BEGIN_SCRIPT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BEGIN_SCRIPT_DATA",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BEGIN_SCRIPT_DATA_COMPRESSED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "END_JSON", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "END_METADATA_VAR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "END_SCRIPT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "END_SCRIPT_DATA",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "END_SCRIPT_DATA_COMPRESSED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "HTML_HEAD", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "SCRIPT_VAR", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "base64Utils",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "compile2", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "compile3", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "compile4", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "compile5", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "compile6", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "compile7", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "compile8", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "compile9", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "fflate", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setFFlateAddress",
    data: BytesLike
  ): Result;

  events: {};
}

export interface DataChunkCompiler extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: DataChunkCompilerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    BEGIN_JSON(overrides?: CallOverrides): Promise<[string]>;

    BEGIN_METADATA_VAR(
      name: PromiseOrValue<string>,
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    BEGIN_SCRIPT(overrides?: CallOverrides): Promise<[string]>;

    BEGIN_SCRIPT_DATA(overrides?: CallOverrides): Promise<[string]>;

    BEGIN_SCRIPT_DATA_COMPRESSED(overrides?: CallOverrides): Promise<[string]>;

    END_JSON(overrides?: CallOverrides): Promise<[string]>;

    END_METADATA_VAR(
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    END_SCRIPT(overrides?: CallOverrides): Promise<[string]>;

    END_SCRIPT_DATA(overrides?: CallOverrides): Promise<[string]>;

    END_SCRIPT_DATA_COMPRESSED(overrides?: CallOverrides): Promise<[string]>;

    HTML_HEAD(overrides?: CallOverrides): Promise<[string]>;

    SCRIPT_VAR(
      name: PromiseOrValue<string>,
      value: PromiseOrValue<string>,
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    base64Utils(overrides?: CallOverrides): Promise<[string]>;

    compile2(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    compile3(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    compile4(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    compile5(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    compile6(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    compile7(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    compile8(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      chunk8: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    compile9(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      chunk8: PromiseOrValue<string>,
      chunk9: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    fflate(overrides?: CallOverrides): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    setFFlateAddress(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  BEGIN_JSON(overrides?: CallOverrides): Promise<string>;

  BEGIN_METADATA_VAR(
    name: PromiseOrValue<string>,
    omitQuotes: PromiseOrValue<boolean>,
    overrides?: CallOverrides
  ): Promise<string>;

  BEGIN_SCRIPT(overrides?: CallOverrides): Promise<string>;

  BEGIN_SCRIPT_DATA(overrides?: CallOverrides): Promise<string>;

  BEGIN_SCRIPT_DATA_COMPRESSED(overrides?: CallOverrides): Promise<string>;

  END_JSON(overrides?: CallOverrides): Promise<string>;

  END_METADATA_VAR(
    omitQuotes: PromiseOrValue<boolean>,
    overrides?: CallOverrides
  ): Promise<string>;

  END_SCRIPT(overrides?: CallOverrides): Promise<string>;

  END_SCRIPT_DATA(overrides?: CallOverrides): Promise<string>;

  END_SCRIPT_DATA_COMPRESSED(overrides?: CallOverrides): Promise<string>;

  HTML_HEAD(overrides?: CallOverrides): Promise<string>;

  SCRIPT_VAR(
    name: PromiseOrValue<string>,
    value: PromiseOrValue<string>,
    omitQuotes: PromiseOrValue<boolean>,
    overrides?: CallOverrides
  ): Promise<string>;

  base64Utils(overrides?: CallOverrides): Promise<string>;

  compile2(
    chunk1: PromiseOrValue<string>,
    chunk2: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  compile3(
    chunk1: PromiseOrValue<string>,
    chunk2: PromiseOrValue<string>,
    chunk3: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  compile4(
    chunk1: PromiseOrValue<string>,
    chunk2: PromiseOrValue<string>,
    chunk3: PromiseOrValue<string>,
    chunk4: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  compile5(
    chunk1: PromiseOrValue<string>,
    chunk2: PromiseOrValue<string>,
    chunk3: PromiseOrValue<string>,
    chunk4: PromiseOrValue<string>,
    chunk5: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  compile6(
    chunk1: PromiseOrValue<string>,
    chunk2: PromiseOrValue<string>,
    chunk3: PromiseOrValue<string>,
    chunk4: PromiseOrValue<string>,
    chunk5: PromiseOrValue<string>,
    chunk6: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  compile7(
    chunk1: PromiseOrValue<string>,
    chunk2: PromiseOrValue<string>,
    chunk3: PromiseOrValue<string>,
    chunk4: PromiseOrValue<string>,
    chunk5: PromiseOrValue<string>,
    chunk6: PromiseOrValue<string>,
    chunk7: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  compile8(
    chunk1: PromiseOrValue<string>,
    chunk2: PromiseOrValue<string>,
    chunk3: PromiseOrValue<string>,
    chunk4: PromiseOrValue<string>,
    chunk5: PromiseOrValue<string>,
    chunk6: PromiseOrValue<string>,
    chunk7: PromiseOrValue<string>,
    chunk8: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  compile9(
    chunk1: PromiseOrValue<string>,
    chunk2: PromiseOrValue<string>,
    chunk3: PromiseOrValue<string>,
    chunk4: PromiseOrValue<string>,
    chunk5: PromiseOrValue<string>,
    chunk6: PromiseOrValue<string>,
    chunk7: PromiseOrValue<string>,
    chunk8: PromiseOrValue<string>,
    chunk9: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  fflate(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  setFFlateAddress(
    chunk1: PromiseOrValue<string>,
    chunk2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    BEGIN_JSON(overrides?: CallOverrides): Promise<string>;

    BEGIN_METADATA_VAR(
      name: PromiseOrValue<string>,
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<string>;

    BEGIN_SCRIPT(overrides?: CallOverrides): Promise<string>;

    BEGIN_SCRIPT_DATA(overrides?: CallOverrides): Promise<string>;

    BEGIN_SCRIPT_DATA_COMPRESSED(overrides?: CallOverrides): Promise<string>;

    END_JSON(overrides?: CallOverrides): Promise<string>;

    END_METADATA_VAR(
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<string>;

    END_SCRIPT(overrides?: CallOverrides): Promise<string>;

    END_SCRIPT_DATA(overrides?: CallOverrides): Promise<string>;

    END_SCRIPT_DATA_COMPRESSED(overrides?: CallOverrides): Promise<string>;

    HTML_HEAD(overrides?: CallOverrides): Promise<string>;

    SCRIPT_VAR(
      name: PromiseOrValue<string>,
      value: PromiseOrValue<string>,
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<string>;

    base64Utils(overrides?: CallOverrides): Promise<string>;

    compile2(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    compile3(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    compile4(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    compile5(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    compile6(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    compile7(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    compile8(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      chunk8: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    compile9(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      chunk8: PromiseOrValue<string>,
      chunk9: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    fflate(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    setFFlateAddress(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    BEGIN_JSON(overrides?: CallOverrides): Promise<BigNumber>;

    BEGIN_METADATA_VAR(
      name: PromiseOrValue<string>,
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    BEGIN_SCRIPT(overrides?: CallOverrides): Promise<BigNumber>;

    BEGIN_SCRIPT_DATA(overrides?: CallOverrides): Promise<BigNumber>;

    BEGIN_SCRIPT_DATA_COMPRESSED(overrides?: CallOverrides): Promise<BigNumber>;

    END_JSON(overrides?: CallOverrides): Promise<BigNumber>;

    END_METADATA_VAR(
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    END_SCRIPT(overrides?: CallOverrides): Promise<BigNumber>;

    END_SCRIPT_DATA(overrides?: CallOverrides): Promise<BigNumber>;

    END_SCRIPT_DATA_COMPRESSED(overrides?: CallOverrides): Promise<BigNumber>;

    HTML_HEAD(overrides?: CallOverrides): Promise<BigNumber>;

    SCRIPT_VAR(
      name: PromiseOrValue<string>,
      value: PromiseOrValue<string>,
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    base64Utils(overrides?: CallOverrides): Promise<BigNumber>;

    compile2(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    compile3(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    compile4(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    compile5(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    compile6(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    compile7(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    compile8(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      chunk8: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    compile9(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      chunk8: PromiseOrValue<string>,
      chunk9: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    fflate(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    setFFlateAddress(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    BEGIN_JSON(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    BEGIN_METADATA_VAR(
      name: PromiseOrValue<string>,
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    BEGIN_SCRIPT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    BEGIN_SCRIPT_DATA(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    BEGIN_SCRIPT_DATA_COMPRESSED(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    END_JSON(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    END_METADATA_VAR(
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    END_SCRIPT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    END_SCRIPT_DATA(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    END_SCRIPT_DATA_COMPRESSED(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    HTML_HEAD(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    SCRIPT_VAR(
      name: PromiseOrValue<string>,
      value: PromiseOrValue<string>,
      omitQuotes: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    base64Utils(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    compile2(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    compile3(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    compile4(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    compile5(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    compile6(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    compile7(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    compile8(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      chunk8: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    compile9(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      chunk3: PromiseOrValue<string>,
      chunk4: PromiseOrValue<string>,
      chunk5: PromiseOrValue<string>,
      chunk6: PromiseOrValue<string>,
      chunk7: PromiseOrValue<string>,
      chunk8: PromiseOrValue<string>,
      chunk9: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    fflate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setFFlateAddress(
      chunk1: PromiseOrValue<string>,
      chunk2: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
